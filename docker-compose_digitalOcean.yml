models:
    image: tp33/django
    external_links:
      -  mysql:db
    container_name: models_container
    volumes:
      - "$PWD/app:/app"
    command: bash -c " python /app/models/manage.py makemigrations api && python /app/models/manage.py migrate && python /app/models/manage.py loaddata /app/models/db.json && mod_wsgi-express start-server --working-directory /app/models --reload-on-changes --log-to-terminal /app/models/models/wsgi.py"

exp:
   image: tp33/django 
   links:
      - models:models-api
      - kafka:kafka
      - es:es
   volumes:
      - "$PWD/app:/app"
   command: bash -c "mod_wsgi-express start-server --working-directory /app/exp --reload-on-changes --log-to-terminal /app/exp/exp/wsgi.py"

web1:
   image: tp33/django
   container_name: web1
   links:
      - exp:exp-api
   volumes:
      - "$PWD/app:/app"
   command: bash -c "pip install selenium && mod_wsgi-express start-server --working-directory /app/web --reload-on-changes /app/web/web/wsgi.py"


web2:
   image: tp33/django
   container_name: web2
   links:
      - exp:exp-api
   volumes:
      - "$PWD/app:/app"
   command: bash -c "pip install selenium && mod_wsgi-express start-server --working-directory /app/web --reload-on-changes /app/web/web/wsgi.py"

kafka:
   image: spotify/kafka
   container_name: kafka
   environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
   hostname: kafka
   
es:
   image: elasticsearch:2.0
   container_name: es
   ports:
      - "9200:9200"

batch:
   image: tp33/django
   container_name: batch
   links:
      - kafka:kafka
      - es:es
   volumes:
      - "$PWD:/app"
   command: python index_batch.py

haproxy:
  container_name: haproxy
  image: my-haproxy
  volumes:
    - "$PWD:/app"
  links:
    - web1:web1
    - web2:web2
  ports:
    - "8080:80"